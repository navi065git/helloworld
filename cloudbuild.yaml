steps:
# Step 1: Create Artifact Registry repository (if it doesn't exist)
- name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    gcloud artifacts repositories describe ${_REPO_NAME} \
      --project=${PROJECT_ID} \
      --location=${_REGION} || \
    gcloud artifacts repositories create ${_REPO_NAME} \
      --project=${PROJECT_ID} \
      --repository-format=docker \
      --location=${_REGION} \
      --description="Docker repository for Node.js app"
  id: 'Create Artifact Registry'

# Step 2: Build the Docker image
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}', '.']
  id: 'Build Docker image'

# Step 3: Push the Docker image to Artifact Registry
- name: 'gcr.io/cloud-builders/docker'
  args: ['push', '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}']
  id: 'Push to Artifact Registry'

# Step 4: Apply Kubernetes manifests
- name: 'gcr.io/cloud-builders/kubectl'
  args: ['apply', '-f', 'k8s/']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION}'
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'
  id: 'Apply Kubernetes manifests'

# Step 5: Update the Kubernetes deployment
- name: 'gcr.io/cloud-builders/kubectl'
  args:
  - 'set'
  - 'image'
  - 'deployment/${_DEPLOYMENT_NAME}'
  - '${_CONTAINER_NAME}=${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}'
  env:
  - 'CLOUDSDK_COMPUTE_REGION=${_REGION}'
  - 'CLOUDSDK_COMPUTE_ZONE=${_ZONE}'
  - 'CLOUDSDK_CONTAINER_CLUSTER=${_CLUSTER_NAME}'
  id: 'Update Kubernetes deployment'

# Images to be pushed to Artifact Registry
images:
- '${_REGION}-docker.pkg.dev/${PROJECT_ID}/${_REPO_NAME}/${_IMAGE_NAME}:${SHORT_SHA}'

# Substitutions
substitutions:
  _REPO_NAME: nodejs-app-repo
  _REGION: us-central1
  _IMAGE_NAME: nodejs-app
  _ZONE: us-central1-a
  _CLUSTER_NAME: my-gke-cluster
  _DEPLOYMENT_NAME: nodejs-app-deployment
  _CONTAINER_NAME: nodejs-app

# Logging configuration
options:
  logging: CLOUD_LOGGING_ONLY
